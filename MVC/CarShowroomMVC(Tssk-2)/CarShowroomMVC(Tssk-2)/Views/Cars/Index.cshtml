@model IEnumerable<CarShowroomMVC.Models.Car>

@{
    ViewData["Title"] = "Car Showroom";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            min-height: 100vh;
            padding-top: 2rem;
        }

        .showroom-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2.5rem;
            padding-bottom: 1.5rem;
            border-bottom: 2px solid #e9ecef;
        }

        .showroom-title {
            font-size: 2.5rem;
            font-weight: 800;
            color: #2c3e50;
            display: flex;
            align-items: center;
            gap: 12px;
        }

            .showroom-title i {
                color: #3498db;
                background: linear-gradient(135deg, #3498db, #2980b9);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-clip: text;
            }

        .btn-add-car {
            background: linear-gradient(45deg, #27ae60, #2ecc71);
            border: none;
            padding: 0.75rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 50px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
        }

            .btn-add-car:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(39, 174, 96, 0.4);
                background: linear-gradient(45deg, #219653, #27ae60);
            }

        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            background: white;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.08);
            max-width: 600px;
            margin: 2rem auto;
        }

            .empty-state i {
                font-size: 4rem;
                color: #3498db;
                margin-bottom: 1.5rem;
                opacity: 0.7;
            }

            .empty-state h3 {
                font-size: 1.8rem;
                color: #2c3e50;
                margin-bottom: 1rem;
                font-weight: 700;
            }

            .empty-state p {
                color: #7f8c8d;
                font-size: 1.1rem;
                line-height: 1.6;
            }

        .car-card {
            border: none;
            border-radius: 20px;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            height: 100%;
            display: flex;
            flex-direction: column;
            background: white;
        }

            .car-card:hover {
                transform: translateY(-8px);
                box-shadow: 0 15px 40px rgba(0,0,0,0.15);
            }

        .car-image {
            height: 220px;
            object-fit: cover;
            width: 100%;
            transition: transform 0.3s ease;
        }

        .car-card:hover .car-image {
            transform: scale(1.05);
        }

        .car-body {
            padding: 1.5rem;
            flex-grow: 1;
        }

        .car-title {
            font-size: 1.3rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 1rem;
            line-height: 1.3;
        }

        .car-detail {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            color: #34495e;
            font-weight: 500;
        }

        .car-price {
            font-size: 1.4rem;
            font-weight: 800;
            color: #27ae60;
            margin: 1rem 0;
            text-align: center;
            padding: 0.75rem;
            background: linear-gradient(135deg, #f8fff8, #f0fdf4);
            border-radius: 12px;
            border: 2px solid #d1fad1;
        }

        .card-footer {
            background: white;
            border-top: 1px solid #ecf0f1;
            padding: 1.25rem;
            display: flex;
            gap: 0.75rem;
        }

        .btn-edit {
            background: linear-gradient(45deg, #3498db, #2980b9);
            border: none;
            padding: 0.6rem 1.2rem;
            font-weight: 600;
            border-radius: 12px;
            transition: all 0.3s ease;
            flex: 1;
        }

            .btn-edit:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
                background: linear-gradient(45deg, #2980b9, #1f618d);
            }

        .btn-delete {
            background: linear-gradient(45deg, #e74c3c, #c0392b);
            border: none;
            padding: 0.6rem 1.2rem;
            font-weight: 600;
            border-radius: 12px;
            transition: all 0.3s ease;
            flex: 1;
        }

            .btn-delete:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 12px rgba(231, 76, 60, 0.3);
                background: linear-gradient(45deg, #c0392b, #a93226);
            }

        .cars-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 2rem;
            margin-top: 1rem;
        }

        @@media (max-width: 768px) {
            .showroom-header {
                flex-direction: column;
                gap: 1.5rem;
                text-align: center;
            }

            .showroom-title {
                font-size: 2rem;
                justify-content: center;
            }

            .cars-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 1.5rem;
            }

            .card-footer {
                flex-direction: column;
            }
        }

        @@media (max-width: 480px) {
            .cars-grid {
                grid-template-columns: 1fr;
            }

            .showroom-title {
                font-size: 1.8rem;
            }

            body {
                padding-top: 1rem;
            }
        }

        .stats-badge {
            background: linear-gradient(45deg, #3498db, #2980b9);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 600;
            margin-left: 1rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="showroom-header">
            <h2 class="showroom-title">
                <i class="fas fa-car"></i> Car Showroom
                <span class="stats-badge" id="carCount">@Model.Count() @(Model.Count() == 1 ? "car" : "cars")</span>
            </h2>
            <a href="@Url.Action("Create", "Cars")" class="btn btn-add-car">
                <i class="fas fa-plus me-2"></i>Add Car
            </a>
        </div>

        <div id="carsContainer">
            @if (!Model.Any())
            {
                <div class="empty-state" id="emptyState">
                    <i class="fas fa-car-side"></i>
                    <h3>No Cars Available</h3>
                    <p>Your showroom is empty! Add your first car to get started.</p>
                    <a href="@Url.Action("Create", "Cars")" class="btn btn-add-car mt-3">
                        <i class="fas fa-plus me-2"></i>Add Your First Car
                    </a>
                </div>
            }
            else
            {
                <div class="cars-grid" id="carsGrid">
                    @foreach (var car in Model)
                    {
                        <div class="car-card">
                            <img src="@(!string.IsNullOrEmpty(car.ImageUrl) ? car.ImageUrl : "https://placehold.co/400x220/3498db/ffffff?text=No+Image")"
                                 class="car-image"
                                 alt="@car.Name">
                            <div class="car-body">
                                <h5 class="car-title">@car.Name</h5>
                                <div class="car-detail">
                                    <span>Brand:</span>
                                    <span>@car.Brand</span>
                                </div>
                                <div class="car-detail">
                                    <span>Year:</span>
                                    <span>@car.Year</span>
                                </div>
                                <div class="car-price">$@car.Price.ToString("N0")</div>
                            </div>
                            <div class="card-footer">
                                <a href="@Url.Action("Edit", "Cars", new { id = car.Id })" class="btn btn-edit">
                                    <i class="fas fa-edit me-1"></i>Edit
                                </a>
                                <a href="@Url.Action("Delete", "Cars", new { id = car.Id })" class="btn btn-delete">
                                    <i class="fas fa-trash me-1"></i>Delete
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>